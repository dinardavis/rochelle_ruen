{"version":3,"file":"0b70b2d0a503f1c5aa7e19c801d9cf1db126e894-4ea3ce426b093bcff067.js","mappings":"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","sources":["webpack://DonutMissOut/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/store/store.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/index.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/methods/init/init.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/methods/send/send.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://DonutMissOut/./node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","webpack://DonutMissOut/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://DonutMissOut/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://DonutMissOut/./node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","webpack://DonutMissOut/./node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","webpack://DonutMissOut/./src/components/ContactForm.js","webpack://DonutMissOut/./node_modules/framer-motion/dist/es/utils/use-in-view.mjs","webpack://DonutMissOut/./src/assets/imgs/main_background.png"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const noop = (any) => any;\n\nexport { noop };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import React from \"react\"\nimport { useRef } from \"react\";\nimport { useInView } from \"framer-motion\";\nimport emailjs from \"@emailjs/browser\";\nimport { IoCheckmarkCircleSharp } from \"react-icons/io5\";\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\n\n\n\nexport default function ContactForm() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: true });\n\n  const [popupDisplay, setPopupDisplay] = React.useState({\n    display: \"none\" \n  });\n\n  const [emailSuccess, setEmailSuccess] = React.useState(false)\n\n  const [formData, setFormData] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const [formInputsValid, setFormInputsValid] = React.useState({\n    firstName: false,\n    lastName: false,\n    email: false,\n    message: false,\n  });\n\n  function clearInputs() {\n    setFormData({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      message: \"\",\n    });\n  }\n\n  function resetFormInputs() {\n    setFormInputsValid({\n      firstName: false,\n      lastName: false,\n      email: false,\n      message: false,\n    });\n  }\n\n  const [firstNameField, setFirstNameField] = React.useState(\"\");\n  const [lastNameField, setLastNameField] = React.useState(\"\");\n  const [emailField, setEmailField] = React.useState(\"\");\n  const [messageField, setMessageField] = React.useState(\"\");\n\n  React.useEffect(() => {\n    setFirstNameField(document.querySelector(\".firstNameField\"));\n    setLastNameField(document.querySelector(\".lastNameField\"));\n    setEmailField(document.querySelector(\".emailField\"));\n    setMessageField(document.querySelector(\".messageField\"));\n  }, []);\n\n  function handleChange(event) {\n    const { name, value, type, checked } = event.target;\n    setFormData((prevFormData) => {\n      return {\n        ...prevFormData,\n        [name]: type === \"checkbox\" ? checked : value,\n      };\n    });\n    validateFormInputs();\n  }\n\n  function validateFormInputs() {\n    const emailFormat = /^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})$/;\n    const nameFormat = /^[A-Za-z]+$/;\n\n    if (\n      !firstNameField.value.match(nameFormat) &&\n      document.activeElement === firstNameField\n    ) {\n      firstNameField.classList.add(\"input-error\");\n      setFormInputsValid((prevFormInputsValid) => {\n        return { ...prevFormInputsValid, firstName: false };\n      });\n    } else if (firstNameField.value.match(nameFormat)) {\n      firstNameField.classList.remove(\"input-error\");\n      setFormInputsValid((prevFormInputsValid) => {\n        return { ...prevFormInputsValid, firstName: true };\n      });\n    }\n\n    if (\n      !lastNameField.value.match(nameFormat) &&\n      document.activeElement === lastNameField\n    ) {\n      lastNameField.classList.add(\"input-error\");\n      setFormInputsValid((prevFormInputsValid) => {\n        return { ...prevFormInputsValid, lastName: false };\n      });\n    } else if (lastNameField.value.match(nameFormat)) {\n      lastNameField.classList.remove(\"input-error\");\n      setFormInputsValid((prevFormInputsValid) => {\n        return { ...prevFormInputsValid, lastName: true };\n      });\n    }\n\n    if (\n      !emailField.value.match(emailFormat) &&\n      document.activeElement === emailField\n    ) {\n      emailField.classList.add(\"input-error\");\n      setFormInputsValid((prevFormInputsValid) => {\n        return { ...prevFormInputsValid, email: false };\n      });\n    } else if (emailField.value.match(emailFormat)) {\n      emailField.classList.remove(\"input-error\");\n      setFormInputsValid((prevFormInputsValid) => {\n        return { ...prevFormInputsValid, email: true };\n      });\n    }\n\n    if (\n      messageField.value.length === 0 &&\n      document.activeElement === messageField\n    ) {\n      messageField.classList.add(\"input-error\");\n      setFormInputsValid((prevFormInputsValid) => {\n        return { ...prevFormInputsValid, message: false };\n      });\n    } else if (messageField.value.length > 0) {\n      messageField.classList.remove(\"input-error\");\n      setFormInputsValid((prevFormInputsValid) => {\n        return { ...prevFormInputsValid, message: true };\n      });\n    }\n  }\n\n  function sendEmail(event) {\n    event.preventDefault();\n    if (\n      formInputsValid.firstName &&\n      formInputsValid.lastName &&\n      formInputsValid.email &&\n      formInputsValid.message\n    ) {\n      emailjs.sendForm(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        event.target,\n        process.env.REACT_APP_PUBLIC_KEY\n      )\n      .then((response) => {\n        setEmailSuccess(true)\n        clearInputs()\n        resetFormInputs()\n        animatePopup()\n      }) \n      .catch((error) => {\n        setEmailSuccess(false)\n        animatePopup()\n      });\n    } else {\n      if (firstNameField.value.length === 0) {\n        firstNameField.classList.add(\"input-error\");\n      }\n      if (lastNameField.value.length === 0) {\n        lastNameField.classList.add(\"input-error\");\n      }\n      if (emailField.value.length === 0) {\n        emailField.classList.add(\"input-error\");\n      }\n      if (messageField.value.length === 0) {\n        messageField.classList.add(\"input-error\");\n      }\n    }\n  }\n\n  function animatePopup() {\n    setPopupDisplay({\n      display: \"flex\",\n      className: \"fadein\",\n    });\n    setTimeout(() => {\n      setPopupDisplay({\n        display: \"none\",\n        className: \"\",\n      });\n    }, 4500);\n  }\n\n  return (\n    <>\n      <form className=\"form contact-form\" onSubmit={sendEmail}>\n        <div className=\"thank-you-popup\" style={popupDisplay}>\n          <p className=\"thank-you-copy success\">{emailSuccess ? \"Success!\" : \"Error!\"}</p>\n          <div className=\"checkmark-container\">\n          {emailSuccess ? <IoCheckmarkCircleSharp className='thank-you-pop-checkmark'/> : <IoCloseCircleSharp className='thank-you-pop-error' />}\n          </div>\n\n        {emailSuccess ?\n          <>\n          <p className=\"thank-you-copy\">\n          Thanks for reaching out!</p>\n          <p className=\"thank-you-copy\">I'll be in touch soon.</p>\n          </>    \n          : \n          <>\n            <p className='thank-you-copy'>Looks like something went wrong. Double check you info, and try again.</p>\n          </>   \n          }   \n        </div>\n        <div className=\"form-row form-row-name\">\n          <input\n              className=\"firstNameField\"\n              type=\"text\"\n              placeholder=\"First Name\"\n              onChange={handleChange}\n              name=\"firstName\"\n              id=\"firstName\"\n              value={formData.firstName}\n          />\n          <input\n            className=\"lastNameField\"\n            type=\"text\"\n            placeholder=\"Last Name\"\n            onChange={handleChange}\n            name=\"lastName\"\n            id=\"lastName\"\n            value={formData.lastName}\n          />\n        </div>\n          \n        <div className=\"form-row\">\n          <input\n            className=\"emailField\"\n            type=\"text\"\n            placeholder=\"Email\"\n            onChange={handleChange}\n            name=\"email\"\n            value={formData.email}\n          />\n        </div>\n        <div className=\"form-row\">\n          <textarea\n            className=\"messageField\"\n            name=\"message\"\n            id=\"message\"\n            value={formData.message}\n            onChange={handleChange}\n            placeholder=\"Message\"\n          ></textarea>\n        </div>\n\n        <div className=\"contact-btn-style\">\n          <button type=\"submit\" className=\"btn contact-btn btn-hover\">\n            \n          </button>\n          Submit\n        </div>\n      </form>\n    </>\n  )\n}","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","export default __webpack_public_path__ + \"static/main_background-0a6d6fb02ea74c00d1585f736cdaf48c.png\";"],"names":["EmailJSResponseStatus","constructor","_status","_text","this","status","text","store","origin","blockHeadless","storageProvider","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","createWebStorage","buildOptions","options","publicKey","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","length","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","Array","isArray","validateBlockListParams","name","FormData","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","id","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","init","opts","blockList","limitRate","send","templateParams","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","formData","append","invariant","any","thresholds","some","all","inView","elementOrSelector","onStart","root","margin","rootMargin","amount","elements","scope","selectorCache","_a","Boolean","current","querySelectorAll","Element","from","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","target","isIntersecting","newOnEnd","unobserve","delete","threshold","element","observe","disconnect","ContactForm","ref","once","isInView","setInView","useState","useEffect","undefined","useInView","useRef","popupDisplay","setPopupDisplay","React","display","emailSuccess","setEmailSuccess","setFormData","firstName","lastName","email","formInputsValid","setFormInputsValid","firstNameField","setFirstNameField","lastNameField","setLastNameField","emailField","setEmailField","messageField","setMessageField","handleChange","event","type","checked","prevFormData","emailFormat","nameFormat","match","activeElement","classList","prevFormInputsValid","add","validateFormInputs","animatePopup","className","setTimeout","onSubmit","preventDefault","emailjs","process","REACT_APP_SERVICE_ID","REACT_APP_TEMPLATE_ID","REACT_APP_PUBLIC_KEY","then","catch","error","style","placeholder","onChange"],"sourceRoot":""}